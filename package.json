{
  "name": "pkg-version",
  "displayName": "Package Version Checker",
  "description": "Checks package versions in common manifest files (package.json, composer.json, requirements.txt, pubspec.yaml) for updates.",
  "version": "1.0.10",
  "publisher": "Abdullah-Dev",
  "repository": {
    "type": "git",
    "url": "https://github.com/attaryz/pkg-version"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:**/package.json",
    "workspaceContains:**/composer.json",
    "workspaceContains:**/composer.lock",
    "workspaceContains:**/requirements.txt",
    "workspaceContains:**/pubspec.yaml",
    "workspaceContains:**/vendor/*/composer.json",
    "workspaceContains:**/vendor/composer/installed.json"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "pkg-version.checkUpdates",
        "title": "Check for Package Updates",
        "icon": "$(search)"
      },
      {
        "command": "pkg-version.refreshDependencies",
        "title": "Refresh Dependencies",
        "icon": "$(refresh)"
      },
      {
        "command": "pkg-version.excludeFolder",
        "title": "Exclude Folder from Package Checks",
        "icon": "$(exclude)"
      },
      {
        "command": "pkg-version.excludeCustomPattern",
        "title": "Exclude Pattern",
        "icon": "$(exclude)"
      },
      {
        "command": "pkg-version.manageExclusions",
        "title": "Manage Exclusions",
        "icon": "$(gear)"
      },
      {
        "command": "pkg-version.updatePackage",
        "title": "Update Package",
        "icon": "$(arrow-up)"
      },
      {
        "command": "pkg-version.updateAllPackages",
        "title": "Update All Packages",
        "icon": "$(sync)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "pkg-version.refreshDependencies",
          "when": "view == packageDependencies",
          "group": "navigation@0",
          "icon": "$(refresh)"
        },
        {
          "command": "pkg-version.updateAllPackages",
          "when": "view == packageDependencies",
          "group": "1_updates@1",
          "icon": "$(arrow-up)"
        },
        {
          "command": "pkg-version.manageExclusions",
          "when": "view == packageDependencies",
          "group": "2_configuration@1",
          "icon": "$(gear)"
        },
        {
          "command": "pkg-version.excludeCustomPattern",
          "when": "view == packageDependencies",
          "group": "2_configuration@2",
          "icon": "$(exclude)"
        }
      ],
      "view/item/context": [
        {
          "command": "pkg-version.updatePackage",
          "when": "view == packageDependencies && viewItem == dependency",
          "group": "inline",
          "icon": "$(arrow-up)"
        }
      ],
      "explorer/context": [
        {
          "command": "pkg-version.excludeFolder",
          "when": "explorerResourceIsFolder",
          "group": "2_workspace"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "package-version-explorer",
          "title": "Package Versions",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "package-version-explorer": [
        {
          "id": "packageDependencies",
          "name": "Dependencies",
          "contextualTitle": "Package Dependencies"
        }
      ]
    },
    "configuration": {
      "title": "Package Version Checker",
      "properties": {
        "pkgVersion.excludeFolders": {
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/vendor/**/vendor/**",
            "**/venv/**",
            "**/.git/**",
            "**/build/**",
            "**/.dart_tool/**",
            "**/dist/**",
            "**/.next/**",
            "**/.nuxt/**",
            "**/bin/**",
            "**/__pycache__/**"
          ],
          "description": "Glob patterns for folders to exclude when searching for package files. Note: The vendor folder will still be accessible directly for Composer package scanning."
        },
        "pkgVersion.scanVendorDirectory": {
          "type": "boolean",
          "default": true,
          "description": "Whether to scan the vendor directory for installed Composer packages when no composer.json is found."
        },
        "pkgVersion.composerPackageDetection": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "composer.json",
            "composer.lock",
            "vendor",
            "all"
          ],
          "description": "How to detect Composer packages: 'auto' (try all methods), 'composer.json' (only from composer.json), 'composer.lock' (only from composer.lock), 'vendor' (only from vendor dir), or 'all' (use all methods)."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint .",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./test/runTest.js",
    "publish": "npx @vscode/vsce publish",
    "package": "npm run esbuild-base -- --minify && npx @vscode/vsce package"
  },
  "dependencies": {
    "axios": "^1.8.4",
    "semver": "^7.7.1"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/js-yaml": "^4.0.9",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.x",
    "@types/semver": "^7.7.0",
    "@types/vscode": "^1.80.0",
    "@vscode/test-electron": "^2.3.3",
    "esbuild": "^0.25.2",
    "eslint": "^8.44.0",
    "glob": "^10.3.3",
    "js-yaml": "^4.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.6"
  }
}
